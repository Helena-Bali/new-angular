{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/autocomplete\";\nimport * as i4 from \"@angular/material/core\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/tooltip\";\nfunction ProductsComponent_div_2_div_1_mat_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 16);\n    i0.ɵɵlistener(\"onSelectionChange\", function ProductsComponent_div_2_div_1_mat_option_5_Template_mat_option_onSelectionChange_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r7.setParentItems());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const product_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", product_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", product_r6, \" \");\n  }\n}\nfunction ProductsComponent_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"mat-form-field\", 8)(2, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function ProductsComponent_div_2_div_1_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const i_r2 = i0.ɵɵnextContext().index;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.items[i_r2] = $event);\n    })(\"input\", function ProductsComponent_div_2_div_1_Template_input_input_2_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const i_r2 = i0.ɵɵnextContext().index;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.getProducts.emit(ctx_r12.items[i_r2]));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-autocomplete\", 10, 11);\n    i0.ɵɵtemplate(5, ProductsComponent_div_2_div_1_mat_option_5_Template, 2, 2, \"mat-option\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"mat-form-field\", 13)(7, \"input\", 14);\n    i0.ɵɵlistener(\"change\", function ProductsComponent_div_2_div_1_Template_input_change_7_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.setParentItems());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function ProductsComponent_div_2_div_1_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const i_r2 = i0.ɵɵnextContext().index;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.deleteItem(i_r2));\n    });\n    i0.ɵɵelementStart(9, \"mat-icon\");\n    i0.ɵɵtext(10, \"close\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const _r4 = i0.ɵɵreference(4);\n    const i_r2 = i0.ɵɵnextContext().index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"items[\", i_r2, \"]\");\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.items[i_r2])(\"matAutocomplete\", _r4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.products);\n  }\n}\nfunction ProductsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtemplate(1, ProductsComponent_div_2_div_1_Template, 11, 5, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.items);\n  }\n}\nexport let ProductsComponent = /*#__PURE__*/(() => {\n  class ProductsComponent {\n    constructor(formBuilder) {\n      this.formBuilder = formBuilder;\n      this.getProducts = new EventEmitter();\n      this.setItems = new EventEmitter();\n    }\n    ngOnInit() {\n      this.orderForm = this.formBuilder.group({\n        items: this.formBuilder.array([this.createItem()])\n      });\n      this.addItem();\n      this.deleteItem(1);\n    }\n    createItem() {\n      return this.formBuilder.group({\n        product: '',\n        quantity: 1\n      });\n    }\n    addItem() {\n      this.items = this.orderForm.get('items');\n      this.items.push(this.createItem());\n    }\n    deleteItem(i) {\n      this.items.removeAt(i);\n    }\n    setParentItems() {\n      this.setItems.emit(this.items);\n    }\n  }\n  ProductsComponent.ɵfac = function ProductsComponent_Factory(t) {\n    return new (t || ProductsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  ProductsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProductsComponent,\n    selectors: [[\"app-products\"]],\n    inputs: {\n      products: \"products\"\n    },\n    outputs: {\n      getProducts: \"getProducts\",\n      setItems: \"setItems\"\n    },\n    decls: 6,\n    vars: 2,\n    consts: [[1, \"products\", 3, \"formGroup\"], [1, \"items\"], [\"formArrayName\", \"items\", 4, \"ngFor\", \"ngForOf\"], [1, \"tools\"], [\"mat-mini-fab\", \"\", \"matTooltip\", \"\\u041D\\u0430\\u0439\\u0442\\u0438 / \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u043E\\u0432\\u0430\\u0440\", 3, \"click\"], [\"formArrayName\", \"items\"], [3, \"formGroupName\", 4, \"ngIf\"], [3, \"formGroupName\"], [1, \"product\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"product\", \"placeholder\", \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\\u0430\", 3, \"ngModel\", \"name\", \"matAutocomplete\", \"ngModelChange\", \"input\"], [\"autoActiveFirstOption\", \"\"], [\"productAutocomplete\", \"matAutocomplete\"], [3, \"value\", \"onSelectionChange\", 4, \"ngFor\", \"ngForOf\"], [1, \"quantity\"], [\"type\", \"number\", \"matInput\", \"\", \"formControlName\", \"quantity\", \"placeholder\", \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\", \"min\", \"1\", \"max\", \"1000\", 3, \"change\"], [\"mat-button\", \"\", \"mat-icon-button\", \"\", \"matSuffix\", \"\", \"type\", \"button\", 3, \"click\"], [3, \"value\", \"onSelectionChange\"]],\n    template: function ProductsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, ProductsComponent_div_2_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function ProductsComponent_Template_button_click_4_listener() {\n          return ctx.addItem();\n        });\n        i0.ɵɵtext(5, \"+ \");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.orderForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.orderForm.get(\"items\")[\"controls\"]);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MinValidator, i1.MaxValidator, i3.MatAutocomplete, i4.MatOption, i3.MatAutocompleteTrigger, i5.MatFormField, i5.MatSuffix, i6.MatInput, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i7.MatButton, i7.MatIconButton, i7.MatMiniFabButton, i8.MatCard, i9.MatIcon, i10.MatTooltip],\n    styles: [\".products[_ngcontent-%COMP%]{padding:30px;display:flex;margin-top:20px}.products[_ngcontent-%COMP%]   .items[_ngcontent-%COMP%]{width:90%}.products[_ngcontent-%COMP%]   .items[_ngcontent-%COMP%]   .flex[_ngcontent-%COMP%]{display:flex}.products[_ngcontent-%COMP%]   .items[_ngcontent-%COMP%]   .flex[_ngcontent-%COMP%] > mat-form-field[_ngcontent-%COMP%]{flex-basis:40px;margin-right:20px}.products[_ngcontent-%COMP%]   .items[_ngcontent-%COMP%]   .product[_ngcontent-%COMP%]{width:80%}.products[_ngcontent-%COMP%]   .items[_ngcontent-%COMP%]   .quantity[_ngcontent-%COMP%]{width:9%;margin-left:1%}.products[_ngcontent-%COMP%]   .tools[_ngcontent-%COMP%]{width:10%;display:flex;align-items:start;justify-content:center}.mat-flat-button.mat-accent[_ngcontent-%COMP%], .mat-raised-button.mat-accent[_ngcontent-%COMP%], .mat-fab.mat-accent[_ngcontent-%COMP%], .mat-mini-fab.mat-accent[_ngcontent-%COMP%]{background-color:#149461}\"]\n  });\n  return ProductsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}